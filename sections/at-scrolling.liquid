{% schema %}
{
  "name": "AT - Scrolling Products",
  "settings": [
    {
        "type": "metaobject",
        "id": "input_metaobject",
        "label": "Input Metaobject",
        "metaobject_type": "tp_carousel"
    }
  ],
  "presets": [
    {
      "name": "AT - Scrolling Products"
    }
  ]
}
{% endschema %}

<style>
  .scrolling-product-showcase {
    height: 50vh;
    position: relative;
    overflow: hidden;
    background: #f8f8f8;
  }

  .scrolling-product-list {
    height: 100%;
    overflow-y: scroll;
    padding: 2rem;
    scroll-snap-type: y mandatory;
  }

  .product-title {
    font-size: 2rem;
    margin: 3rem 0;
    text-align: center;
    scroll-snap-align: center;
    cursor: pointer;
  }

  .product-image-overlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-height: 60%;
    max-width: 60%;
    z-index: 2;
    pointer-events: auto;
    box-shadow: 0 0 40px rgba(0,0,0,0.25);
    transition: opacity 0.3s ease;
  }

  .product-image-overlay img {
    width: 100%;
    height: auto;
    display: block;
    cursor: pointer;
  }
</style>

<div class="scrolling-product-showcase" id="scrolling-product-showcase-{{ section.id }}">
  {% assign metaobject_id = section.settings.input_metaobject %}
  {% assign my_metaobject = shop.metaobjects.tp_carousel[metaobject_id] %}
  {% assign use_collection = collections[my_metaobject.collection_handle] %}

  {% if use_collection != blank %}
    <div class="scrolling-product-list">
      {% for product in use_collection.products %}
        <div
          class="product-title"
          data-img="{{ product.featured_image | image_url: width: 800 }}"
          data-url="{{ product.url }}">
          {{ product.title }}
        </div>
      {% endfor %}
    </div>

    <div class="product-image-overlay">
      <img src="" alt="Product Preview" />
    </div>
  {% else %}
    <p style="padding: 2rem; text-align: center;">Please select a metaobject that links to a valid collection.</p>
  {% endif %}
</div>

<script>
  function initScrollObserver(sectionId) {
    const container = document.querySelector(`#scrolling-product-showcase-${sectionId}`);
    if (!container) return;

    const list = container.querySelector(".scrolling-product-list");
    const items = container.querySelectorAll(".product-title");
    const overlay = container.querySelector(".product-image-overlay");
    const overlayImg = overlay.querySelector("img");

    if (!list || !items.length || !overlayImg) return;

    let hideTimer = null;

    function updateOverlayFromItem(item) {
      const img = item.getAttribute("data-img");
      const url = item.getAttribute("data-url");
      if (img) overlayImg.src = img;
      if (url) overlayImg.setAttribute("data-link", url);
      overlay.style.opacity = 1;
    }

    function updateOverlay() {
      const listRect = list.getBoundingClientRect();
      const centerY = listRect.top + listRect.height / 2;

      let closest = null;
      let closestDistance = Infinity;

      items.forEach((item) => {
        const rect = item.getBoundingClientRect();
        const itemCenter = rect.top + rect.height / 2;
        const distance = Math.abs(centerY - itemCenter);

        if (distance < closestDistance) {
          closest = item;
          closestDistance = distance;
        }
      });

      if (closest) {
        updateOverlayFromItem(closest);
      }
    }

    // Initial state
    updateOverlay();

    // Scroll-based update
    list.addEventListener("scroll", () => {
      window.requestAnimationFrame(updateOverlay);
    });

    // Mousemove to hide overlay temporarily
    container.addEventListener("mousemove", () => {
      overlay.style.opacity = 0;
      clearTimeout(hideTimer);
      hideTimer = setTimeout(() => {
        updateOverlay(); // Show again after user stops moving
      }, 600);
    });

    // Hovering on title updates instantly
    items.forEach((item) => {
      item.addEventListener("mouseenter", () => {
        updateOverlayFromItem(item);
      });
    });

    overlayImg.addEventListener("click", () => {
      const link = overlayImg.getAttribute("data-link");
      if (link) window.location.href = link;
    });
  }

  document.addEventListener("DOMContentLoaded", function () {
    initScrollObserver("{{ section.id }}");
  });

  document.addEventListener("shopify:section:load", function (e) {
    if (e.target.querySelector(`#scrolling-product-showcase-{{ section.id }}`)) {
      initScrollObserver("{{ section.id }}");
    }
  });
</script>