{% schema %}
{
  "name": "AT - Scrolling Products",
  "settings": [
    {
        "type": "metaobject",
        "id": "input_metaobject",
        "label": "input metaobject",
        "metaobject_type": "tp_carousel"
    }
  ],
  "presets": [
    {
      "name": "AT - Scrolling Products"
    }
  ]
}
{% endschema %}

{% stylesheet %}
<style>
  .scrolling-product-showcase {
    height: 50vh;
    position: relative;
    overflow: hidden;
    background: #f8f8f8;
  }

  .scrolling-product-list {
    height: 100%;
    overflow-y: scroll;
    padding: 2rem;
    scroll-snap-type: y mandatory;
  }

  .product-title {
    font-size: 2rem;
    margin: 3rem 0;
    text-align: center;
    scroll-snap-align: center;
    cursor: pointer;
  }

  .product-image-overlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-height: 60%;
    max-width: 60%;
    z-index: 2;
    pointer-events: auto;
    box-shadow: 0 0 40px rgba(0,0,0,0.25);
    transition: opacity 0.3s ease;
  }

  .product-image-overlay img {
    width: 100%;
    height: auto;
    display: block;
    cursor: pointer;
  }
</style>
{% endstylesheet %}

{% javascript %}
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const list = document.querySelector('.scrolling-product-list');
    const items = document.querySelectorAll('.product-title');
    const overlay = document.querySelector('.product-image-overlay');
    const overlayImg = overlay.querySelector('img');

    const observer = new IntersectionObserver(
      entries => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const img = entry.target.getAttribute('data-img');
            const url = entry.target.getAttribute('data-url');
            overlayImg.src = img;
            overlayImg.setAttribute('data-link', url);
          }
        });
      },
      {
        root: list,
        threshold: 0.6
      }
    );

    items.forEach(item => observer.observe(item));

    overlayImg.addEventListener('click', () => {
      const link = overlayImg.getAttribute('data-link');
      if (link) window.location.href = link;
    });
  });
</script>
{% endjavascript %}

<div class="scrolling-product-showcase">

  {% assign metaobject_id = section.settings.input_metaobject %}
  {% assign my_metaobject = shop.metaobjects.tp_carousel[metaobject_id] %}
  {%- assign use_collection = collections[my_metaobject.collection_handle] -%}
  <script>console.log("{{use_collection.title}}");</script>

  {%  comment  %}
  {% render 'tp-prod-carousel-block'
    , input_products: use_collection.products
    , input_type: "products"
    , input_title: my_metaobject.title
    , input_shop_all_text: "shop all"
    , input_shop_all_link: use_collection.url %}
  {% endcomment %}

  {% if use_collection != blank %}
    <div class="scrolling-product-list">
      {% for product in use_collection.products %}
        <div
          class="product-title"
          data-img="{{ product.featured_image | image_url: width: 800 }}"
          data-url="{{ product.url }}">
          {{ product.title }}
        </div>
      {% endfor %}
    </div>

    <div class="product-image-overlay">
      <img src="" alt="Product Preview" />
    </div>
  {% else %}
    <p style="padding: 2rem; text-align: center;">Please select a metaobject that links to a valid collection.</p>
  {% endif %}
</div>