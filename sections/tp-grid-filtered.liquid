{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

<link rel="preload" href="{{ 'component-rte.css' | asset_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">

{%- if section.settings.enable_quick_add -%}
  <link rel="stylesheet" href="{{ 'quick-add.css' | asset_url }}" media="print" onload="this.media='all'">
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
<noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="section-{{ section.id }}-padding">
  {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
  {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
    <facet-filters-form class="facets facets-vertical-sort small-hide no-js-hidden">
      <form class="facets-vertical-form" id="FacetSortForm">
        <div class="facet-filters sorting caption">
          <div class="facet-filters__field">
            <h2 class="facet-filters__label caption-large text-body">
              <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
            </h2>
            <div class="select">
              {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
              <select name="sort_by" class="facet-filters__sort select__select caption-large" id="SortBy" aria-describedby="a11y-refresh-page-message">
                {%- for option in collection.sort_options -%}
                  <option value="{{ option.value | escape }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name | escape }}</option>
                {%- endfor -%}
              </select>
              {% render 'icon-caret' %}
            </div>
          </div>
          <noscript>
            <button type="submit" class="facets__button-no-js button button--secondary">{{ 'products.facets.sort_button' | t }}</button>
          </noscript>
        </div>

        <div class="product-count-vertical light" role="status">
          <h2 class="product-count__text text-body">
            <span id="ProductCountDesktop">
              {%- if collection.results_count -%}
                {{ 'templates.search.results_with_count' | t: terms: collection.terms, count: collection.results_count }}
              {%- elsif collection.products_count == collection.all_products_count -%}
                {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
              {%- else -%}
                {{ 'products.facets.product_count' | t: product_count: collection.products_count, count: collection.all_products_count }}
              {%- endif -%}
            </span>
          </h2>
          <div class="loading-overlay__spinner">
            <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
              <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
            </svg>
          </div>
        </div>  
      </form>
    </facet-filters-form>
  {%- endif -%}

  <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical {% endif %}">
    {{ 'component-facets.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
    {%- if collection.metafields.gridwall.show_filters and section.settings.enable_filtering or section.settings.enable_sorting -%}
      <aside aria-labelledby="verticalTitle" class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} {% endif %}" id="main-collection-filters" data-id="{{ section.id }}">
        {% render 'facets', results: collection, enable_filtering: section.settings.enable_filtering, enable_sorting: section.settings.enable_sorting, filter_type: section.settings.filter_type %}
      </aside>
    {%- endif -%}

    <div class="product-grid-container{% if section.settings.filter_type == 'vertical' and section.settings.collapse_on_larger_devices %} product-grid-container-vertical{% endif %}" id="ProductGridContainer">
      {%- paginate collection.products by section.settings.products_per_page -%}
        {%- liquid
          assign raw_color_handles = section.settings.color_handle_metafield
          if raw_color_handles == blank
            assign metafield_color_source = collection.metafields.gridwall.color_handle
            if metafield_color_source != blank
              assign raw_color_handles = metafield_color_source.value | default: metafield_color_source
            endif
          endif
          assign color_filter_enabled = false
          assign processed_color_handles = ''
          if raw_color_handles != blank
            assign normalized_source = raw_color_handles | replace: '\r\n', ',' | replace: '\n', ',' | replace: ';', ',' | replace: '|', ',' | replace: '[', '' | replace: ']', '' | replace: '\"', ''
            assign handle_components = normalized_source | split: ','
            for handle_value in handle_components
              assign trimmed_value = handle_value | strip
              if trimmed_value != ''
                assign handleized_value = trimmed_value | handleize
                if processed_color_handles == ''
                  assign processed_color_handles = handleized_value
                else
                  assign processed_color_handles = processed_color_handles | append: ',' | append: handleized_value
                endif
              endif
            endfor
            if processed_color_handles != ''
              assign color_filter_enabled = true
            endif
          endif
          assign color_filter_handles = processed_color_handles | split: ','
        -%}
        {%- if collection.products.size == 0 -%}          
          <div class="collection collection--empty " id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t }}<br>
                {{ 'sections.collection_template.use_fewer_filters_html' | t: link: collection.url, class: "underlined-link link" }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div class="collection{% if section.settings.filter_type != 'vertical' %} {% endif %}">
            <div class="loading-overlay gradient"></div>
    
            <ul id="product-grid" data-id="{{ section.id }}" class="
              grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
              grid--{{ section.settings.columns_desktop }}-col-desktop">

              {%- capture priority_products -%}{%- endcapture -%}
              {%- capture available_products -%}{%- endcapture -%}
              {%- capture unavailable_products -%}{%- endcapture -%}

              {%- for product in collection.products -%}
                {%- liquid
                  assign card_product_object = product
                  assign card_parent_product = blank
                  assign variant_matches_filter = true
                  if color_filter_enabled
                    assign variant_matches_filter = false
                    assign color_option_index = -1
                    for option in product.options_with_values
                      assign option_name = option.name | downcase
                      if option_name == 'color' or option_name == 'colour'
                        assign color_option_index = forloop.index0
                        break
                      endif
                    endfor
                    if color_option_index > -1
                      for variant in product.variants
                        assign variant_color_handle = variant.options[color_option_index] | handleize
                        if color_filter_handles contains variant_color_handle
                          assign card_product_object = variant
                          assign card_parent_product = product
                          assign variant_matches_filter = true
                          break
                        endif
                      endfor
                    endif
                  endif
                -%}

                {%- if color_filter_enabled and variant_matches_filter == false -%}
                  {%- continue -%}
                {%- endif -%}

                {%- if section.settings.remove_OOS_products and card_product_object.available == false -%}
                  {%- continue -%}
                {%- endif -%}

                {% assign should_render_now = false %}

                {%- if card_product_object.available and product.metafields.pdp.badge_text == true -%}
                  {% assign should_render_now = true %}
                {%- endif -%}

                {%- assign lazy_load = false -%}
                {%- if forloop.index > 2 -%}
                  {%- assign lazy_load = true -%}
                {%- endif -%}

                {%- assign card_featured_media = blank -%}
                {%- if card_parent_product != blank -%}
                  {%- assign card_featured_media = card_product_object.featured_media -%}
                  {%- if card_featured_media == blank -%}
                    {%- assign card_featured_media = card_parent_product.featured_media -%}
                  {%- endif -%}
                {%- endif -%}

                {% capture product_html %}
                  <li class="grid__item">
                    {% render 'tp-card-product',
                      card_product: card_product_object,
                      parent_product: card_parent_product,
                      tp_custom_image: card_featured_media,
                      media_aspect_ratio: section.settings.image_ratio,
                      show_secondary_image: section.settings.show_secondary_image,
                      show_vendor: section.settings.show_vendor,
                      show_rating: section.settings.show_rating,
                      lazy_load: lazy_load,
                      show_quick_add: section.settings.enable_quick_add,
                      show_price: section.settings.enable_price,
                      button_color: section.settings.button_color,
                      section_id: section.id %}
                  </li>
                {% endcapture %}

                {%- if should_render_now -%}
                  {%- capture priority_products -%}{{ priority_products }}{{ product_html }}{%- endcapture -%}
                {%- elsif card_product_object.available -%}
                  {%- capture available_products -%}{{ available_products }}{{ product_html }}{%- endcapture -%}
                {%- else -%}
                  {%- capture unavailable_products -%}{{ unavailable_products }}{{ product_html }}{%- endcapture -%}
                {%- endif -%}
              {%- endfor -%}

              {{ priority_products }}
              {{ available_products }}
              {{ unavailable_products }}
            </ul>
    
            {%- if paginate.pages > 1 -%}
              {% render 'pagination', paginate: paginate, anchor: '' %}
            {%- endif -%}
          </div>
        {%- endif -%}
      {%- endpaginate -%}
    </div>
  </div>
</div>
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "ItemList",
  "itemListElement": [
    {% for product in collection.products %}
      {
        "@type": "ListItem",
        "position": {{ forloop.index }},
        "item": {
          "@type": "Product",
          "name": {{ product.title | json }},
          "url": {{ product.url | prepend: shop.url | json }},
          "image": {{ product.featured_image | img_url: '600x600' | prepend: 'https:' | json }},
          "sku": {{ product.sku | json }},
          "offers": {
            "@type": "Offer",
            "priceCurrency": {{ cart.currency.iso_code | json }},
            "price": {{ product.price | money_without_currency | replace: ',', '' | json }},
            "availability": "https://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}"
          }
        }
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ]
}
</script>

{% schema %}
{
  "name": "TP Grid Filtered",
  "class": "section collection-product-grid",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 100,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "text",
      "id": "color_handle_metafield",
      "label": "Color handle metafield",
      "info": "Connect a metafield that lists color handles to filter by (comma or newline separated)."
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.enable_quick_buy.label"
    },
    {
      "type": "checkbox",
      "id": "enable_price",
      "default": false,
      "label": "Enable Price"
    },
    {
      "type": "color",
      "id": "button_color",
      "default": "#000000",
      "label": "Button Color"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "checkbox",
      "id": "remove_OOS_products",
      "default": false,
      "label": "Remove OOS Products"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "TP Grid Filtered",
      "category": "CUSTOM"      
    }
  ]
}
{% endschema %}
