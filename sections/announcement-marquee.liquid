{% comment %}
  HTGT – Announcement Marquee (Bala‑style)
  Features:
  • Infinite marquee with adjustable speed and direction
  • Adjustable spacing (gap) between items
  • Optional separator between items
  • Controls for font size, family, weight, text transform, text decoration
  • Background and text color pickers
  • Pause on hover
  • Optional image preview tooltip on link hover (set per‑block)
{% endcomment %}

<section
  id="announcement-marquee"
  class="ann-marquee"
  style="--am-bg: {{ section.settings.bg_color }}; --am-color: {{ section.settings.text_color }}; --am-gap: {{ section.settings.item_gap }}px; --am-speed: {{ section.settings.speed }}s; --am-font-size: {{ section.settings.font_size }}px; --am-font-weight: {{ section.settings.font_weight }}; --am-underline: {{ section.settings.text_decoration }}; --am-font-family: {{ section.settings.font_family | replace:'\"','\\\"' }};">
  <div class="ann-marquee__track-wrapper {% if section.settings.pause_on_hover %}is-pausable{% endif %}">
    <div
      class="ann-marquee__track"
      data-sep="{{ section.settings.separator_text }}"
      aria-label="Promotions">
      {% assign blocks_twice = section.blocks | concat: section.blocks %}
      {% for block in blocks_twice %}
        {% assign b = block.settings %}
        <div class="ann-item" {{ block.shopify_attributes }}>
          {% if b.url != blank %}
            <a
              href="{{ b.url }}"
              class="ann-link"
              {% if b.preview_image != blank %}
              data-preview="{{ b.preview_image | image_url: width: 480 }}"
              {% endif %}>
              {{ b.text | escape }}
            </a>
          {% else %}
            <span class="ann-text">{{ b.text | escape }}</span>
          {% endif %}
        </div>
        {% if section.settings.separator_text != blank and forloop.index != blocks_twice.size %}
          <div class="ann-sep" aria-hidden="true">{{ section.settings.separator_text }}</div>
        {% endif %}
      {% endfor %}
    </div>
  </div>

  <div
    class="ann-preview"
    id="annPreview"
    hidden>
    <img id="annPreviewImg" alt="" />
  </div>
</section>

<style>
  .ann-marquee {
    position: relative;
    overflow: hidden;
    background: var(--am-bg);
    color: var(--am-color);
  }
  .ann-marquee,
  .ann-marquee * {
    box-sizing: border-box
  }
  .ann-marquee {
    --line-height: 34px
  }
  .ann-marquee__track-wrapper {
    width: 100%;
    height: var(--line-height);
  }
  .ann-marquee__track {
    display: flex;
    align-items: center;
    gap: var(--am-gap);
    white-space: nowrap;
    animation: ann-scroll var(--am-speed) linear infinite;
  }
  .ann-marquee__track-wrapper.is-pausable:hover .ann-marquee__track {
    animation-play-state: paused
  }
  .ann-item {
    display: inline-flex;
    align-items: center
  }
  .ann-link,
  .ann-text {
    display: inline-flex;
    align-items: center;
    line-height: var(--line-height);
    font-size: var(--am-font-size);
    font-weight: var(--am-font-weight);
    color: var(--am-color);
    text-decoration: var(--am-underline);
    font-family: var(--am-font-family)
    , inherit;
    text-transform: {{ section.settings.uppercase | default: false | ternary: 'uppercase','none' }};
  }
  .ann-link:hover {
    opacity: .9
  }
  .ann-sep {
    opacity: .6;
    user-select: none;
    line-height: var(--line-height);
  }

  /* fallback font family if text field empty */
  {% if section.settings.font_family == blank %}
    .ann-link,
    .ann-text {
      font-family: inherit
    }
  {% endif %}

  @keyframes ann-scroll {
    from {
      transform: translateX(0)
    }
    to {
      transform: translateX(-50%)
    }
  }

  /* Preview tooltip */
  .ann-preview {
    position: fixed;
    z-index: 9999;
    pointer-events: none;
    padding: 6px;
    background: #fff;
    border: 1px solid rgba(0, 0, 0, 0.08);
    border-radius: 6px;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.12)
  }
  .ann-preview img {
    display: block;
    max-width: 240px;
    max-height: 180px;
    width: auto;
    height: auto
  }
  @media (prefers-color-scheme: dark) {
    .ann-preview {
      background: #111;
      border-color: #222
    }
  }
</style>
<style>
  /* use dynamic distance for seamless loop */
  @keyframes ann-scroll {
    from {
      transform: translate3d(0, 0, 0);
    }
    to {
      transform: translate3d(calc(-1 * var(--ann-distance, 0px)), 0, 0);
    }
  }
</style>

<script>
  (function(){
  const root = document.getElementById('announcement-marquee');
  if (!root) return;

  const wrapper = root.querySelector('.ann-marquee__track-wrapper');
  const track   = root.querySelector('.ann-marquee__track');

  // 1) Build a content fragment from current items (incl. separators).
  const unit = document.createDocumentFragment();
  [...track.children].forEach(n => unit.appendChild(n.cloneNode(true)));

  // ensure a trailing separator so seams have one
    const sepText = track.dataset.sep;
    const last = unit.lastElementChild;
    if (sepText && !(last && last.classList && last.classList.contains('ann-sep'))) {
    const sep = document.createElement('div');
    sep.className = 'ann-sep';
    sep.setAttribute('aria-hidden', 'true');
    sep.textContent = sepText;
    unit.appendChild(sep);
    }

  // 2) Fill the track until its width exceeds 2x the wrapper (for seamless loop).
  function fill() {
    // clear current content
    track.innerHTML = '';
    // append at least once
    track.appendChild(unit.cloneNode(true));

    // keep appending until width goal reached
    const target = wrapper.clientWidth * 2 + 40; // small buffer
    while (track.scrollWidth < target) {
      track.appendChild(unit.cloneNode(true));
    }

    // distance to scroll = width of the FIRST repetition (one unit)
    // measure by temporarily rendering one unit in isolation
    const temp = document.createElement('div');
    temp.style.cssText = 'position:absolute;visibility:hidden;white-space:nowrap;display:inline-flex;gap:inherit;';
    temp.appendChild(unit.cloneNode(true));
    document.body.appendChild(temp);
    const unitWidth = temp.scrollWidth;
    temp.remove();

    // 3) Set CSS var so keyframes use a pixel-perfect distance
    track.style.setProperty('--ann-distance', unitWidth + 'px');

    // 4) Re-attach hover preview listeners (if any)
    const preview = document.getElementById('annPreview');
    const imgEl   = document.getElementById('annPreviewImg');
    if (preview && imgEl) {
      const onEnter = e => { const u = e.currentTarget.dataset.preview; if (!u) return; imgEl.src = u; preview.hidden = false; position(e); };
      const onMove  = e => position(e);
      const onLeave = () => { preview.hidden = true; imgEl.removeAttribute('src'); };
      function position(e){
        const pad=12; let x=e.clientX+pad, y=e.clientY+pad;
        const vw=innerWidth, vh=innerHeight, pw=preview.offsetWidth, ph=preview.offsetHeight;
        if(x+pw>vw-8) x=vw-pw-8; if(y+ph>vh-8) y=vh-ph-8;
        preview.style.transform = `translate(${x}px, ${y}px)`;
      }
      track.querySelectorAll('a[data-preview]').forEach(a=>{
        a.addEventListener('mouseenter', onEnter);
        a.addEventListener('mousemove', onMove);
        a.addEventListener('mouseleave', onLeave);
      });
    }
  }

  // Run now and on resize for responsiveness
  fill();
  let rAF; addEventListener('resize', () => { cancelAnimationFrame(rAF); rAF = requestAnimationFrame(fill); });
  })();
</script>

{% schema %}
  {
    "name": "Announcement Marquee",
    "settings": [
      {
        "type": "color",
        "id": "bg_color",
        "label": "Background color",
        "default": "#E9F0E6"
      },
      {
        "type": "color",
        "id": "text_color",
        "label": "Text color",
        "default": "#1A1A1A"
      },
      {
        "type": "range",
        "id": "font_size",
        "label": "Font size",
        "min": 10,
        "max": 24,
        "step": 1,
        "unit": "px",
        "default": 12
      },
      {
        "type": "text",
        "id": "font_family",
        "label": "Font family (exact CSS name)",
        "default": "Helvetica Neue"
      }, {
        "type": "select",
        "id": "font_weight",
        "label": "Font weight",
        "options": [
          {
            "value": "400",
            "label": "400 Regular"
          }, {
            "value": "500",
            "label": "500 Medium"
          }, {
            "value": "600",
            "label": "600 SemiBold"
          }, {
            "value": "700",
            "label": "700 Bold"
          }
        ],
        "default": "600"
      }, {
        "type": "select",
        "id": "text_decoration",
        "label": "Text decoration",
        "options": [
          {
            "value": "none",
            "label": "None"
          }, {
            "value": "underline",
            "label": "Underline"
          }
        ],
        "default": "none"
      }, {
        "type": "checkbox",
        "id": "uppercase",
        "label": "Uppercase text",
        "default": true
      }, {
        "type": "range",
        "id": "item_gap",
        "label": "Spacing between items",
        "min": 4,
        "max": 80,
        "step": 2,
        "unit": "px",
        "default": 24
      }, {
        "type": "text",
        "id": "separator_text",
        "label": "Separator between items (leave blank to hide)",
        "default": "|"
      }, {
        "type": "range",
        "id": "speed",
        "label": "Scroll duration (lower = faster)",
        "min": 10,
        "max": 80,
        "step": 2,
        "unit": "s",
        "default": 40
      }, {
        "type": "checkbox",
        "id": "pause_on_hover",
        "label": "Pause marquee on hover",
        "default": true
      }
    ],
    "blocks": [
      {
        "type": "item",
        "name": "Announcement item",
        "settings": [
          {
            "type": "text",
            "id": "text",
            "label": "Text",
            "default": "FREE SHIPPING OVER $75"
          }, {
            "type": "url",
            "id": "url",
            "label": "Link"
          }, {
            "type": "image_picker",
            "id": "preview_image",
            "label": "Hover preview image (optional)"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Announcement Marquee",
        "category": "Header"
      }
    ]
  }
{% endschema %}